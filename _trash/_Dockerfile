# STEP 1 build executable binary
FROM golang:alpine as builder
WORKDIR /app
COPY ./ /app
#get dependancies
RUN go get -d -v
# RUN go mod download
# RUN go get github.com/githubnemo/CompileDaemon
#build the binary
# RUN go build -o /go/bin/hello 
# commands/webservice.go
# CGO_ENABLED=0 go build -a -ldflags '-extldflags "-static"' .
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -ldflags="-w -s" -o /go/bin/hello commands/webservice.go

# STEP 2 build a small image
# start from scratch
FROM scratch
# Copy our static executable
COPY --from=builder /go/bin/hello /go/bin/hello
ENTRYPOINT ["/go/bin/hello"]
# ENTRYPOINT go run /go/bin/hello
# ENTRYPOINT CompileDaemon --build="go build commands/webservice.go" --command=./webservice
